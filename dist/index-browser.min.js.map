{"version":3,"sources":["webpack://Identities/webpack/bootstrap","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic.js","webpack://Identities/./node_modules/hash.js/lib/hash/utils.js","webpack://Identities/./node_modules/bn.js/lib/bn.js","webpack://Identities/./node_modules/minimalistic-assert/index.js","webpack://Identities/./node_modules/inherits/inherits_browser.js","webpack://Identities/./node_modules/hash.js/lib/hash/common.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/curve/index.js","webpack://Identities/./node_modules/hash.js/lib/hash.js","webpack://Identities/./node_modules/orbit-db-keystore/index-browser.js","webpack://Identities/./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://Identities/./node_modules/hash.js/lib/hash/sha/common.js","webpack://Identities/./node_modules/hash.js/lib/hash/sha/256.js","webpack://Identities/./node_modules/hash.js/lib/hash/sha/512.js","webpack://Identities/./index.js","webpack://Identities/./src/identities.js","webpack://Identities/./src/identity.js","webpack://Identities/./src/is-defined.js","webpack://Identities/./src/orbit-db-identity-provider.js","webpack://Identities/./src/identity-provider-interface.js","webpack://Identities/./node_modules/orbit-db-keystore/src/keystore.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/utils.js","webpack://Identities/(webpack)/buildin/module.js","webpack://Identities/./node_modules/brorand/index.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/curve/base.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/curve/short.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/curve/mont.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/curve/edwards.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/curves.js","webpack://Identities/./node_modules/hash.js/lib/hash/sha.js","webpack://Identities/./node_modules/hash.js/lib/hash/sha/1.js","webpack://Identities/./node_modules/hash.js/lib/hash/sha/224.js","webpack://Identities/./node_modules/hash.js/lib/hash/sha/384.js","webpack://Identities/./node_modules/hash.js/lib/hash/ripemd.js","webpack://Identities/./node_modules/hash.js/lib/hash/hmac.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/ec/index.js","webpack://Identities/./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/ec/key.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/ec/signature.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/eddsa/index.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/eddsa/key.js","webpack://Identities/./node_modules/orbit-db-keystore/node_modules/elliptic/lib/elliptic/eddsa/signature.js","webpack://Identities/./node_modules/lru/index.js","webpack://Identities/./node_modules/events/events.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","elliptic","version","utils","rand","curve","curves","ec","eddsa","assert","inherits","htonl","w","zero2","word","length","zero8","toArray","msg","enc","Array","isArray","slice","res","replace","push","parseInt","charCodeAt","hi","lo","toHex","toString","toHex32","endian","join32","start","end","len","k","split32","rotr32","b","rotl32","sum32","a","sum32_3","sum32_4","sum32_5","e","sum64","buf","pos","ah","al","bh","sum64_hi","bl","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","rotr64_lo","shr64_hi","shr64_lo","val","Error","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","isBN","this","negative","words","red","_init","Buffer","wordSize","parseHex","str","Math","min","parseBase","mul","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","ceil","j","off","limbLen","limbPow","total","mod","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","equal","writable","configurable","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","concat","_update","digest","_pad","_digest","bytes","short","edwards","hash","common","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","Keystore","encode","arr","ch32","maj32","p32","ft_1","s0_256","s1_256","g0_256","g1_256","shaCommon","sha256_K","SHA256","W","f","T1","T2","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","IdentityProvider","Identity","OrbitDBIdentityProvider","type","signingKeysPath","supportedTypes","orbitdb","getHandlerFor","Identities","isSupported","[object Object]","options","_keystore","keystore","identity","data","signingKey","getKey","id","sign","signature","publicKey","verify","identityProvider","getId","idSignature","signId","pubKeyIdSignature","signIdentity","createKey","getPublic","signatures","verifyIdentity","assign","createIdentity","keys","includes","isDefined","provider","_id","_publicKey","_signatures","_type","_provider","arg","identityKeysPath","super","EC","LRU","storage","_storage","_cache","hasKey","storedKey","getItem","console","error","keyPair","genKeyPair","privateKey","getPrivate","setItem","JSON","stringify","set","cachedKey","deserializedKey","parse","pub","priv","pubEnc","privEnc","sig","Promise","resolve","toDER","LocalStorage","mkdir","directory","sync","localStorage","minAssert","minUtils","getNAF","naf","getJSF","k1","k2","jsf","d1","d2","u1","u2","m8","m14","m24","cachedProperty","obj","computer","undefined","parseBytes","intFromLE","webpackPolyfill","deprecate","paths","children","Rand","generate","_rand","getBytes","Uint8Array","getByte","crypto","getRandomValues","msCrypto","window","randomBytes","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","adjustCount","redN","_maxwellTrick","BasePoint","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","repr","nafW","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","index","ja","jb","decodePoint","pointFromX","encodeCompressed","_encode","compact","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","Base","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","Point","isRed","inf","JPoint","zOne","lambda","betas","_getEndoRoots","lambdas","basis","map","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","floor","v","y1","y2","len1","_endoSplit","v1","v2","c1","c2","p1","p2","q1","q2","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","pre","endoMul","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","MontCurve","i4","a24","normalize","aa","bb","diffAdd","da","cb","jumlAdd","other","EdwardsCurve","twisted","mOneA","dd","oneC","_mulA","_mulC","lhs","pointFromY","_extDbl","nt","_projDbl","_extAdd","_projAdd","zi","PresetCurve","defineCurve","sha1_K","SHA1","SHA224","SHA384","RIPEMD160","K","Kh","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","Hash","inner","outer","HmacDRBG","KeyPair","Signature","nh","keyFromPrivate","fromPrivate","keyFromPublic","fromPublic","drbg","pers","persEnc","entropy","entropyEnc","nonce","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","recoveryParam","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","predResist","minEntropy","_reseed","reseedInterval","V","nonceEnc","seed","_hmac","kmac","reseed","addEnc","temp","_importPrivate","_importPublic","result","reason","derive","_importDER","Position","place","getLength","initial","octetLen","rmPadding","constructLength","octets","log","LN2","slen","backHalf","EDDSA","pointClass","encodingLength","message","secret","keyFromSecret","hashInt","messagePrefix","R","Rencoded","encodePoint","s_","pubBytes","S","makeSignature","SG","arguments","fromSecret","lastIx","normed","xIsOdd","encodeInt","decodeInt","isPoint","params","_secret","_pub","_pubBytes","privBytes","getSecret","_R","_S","_Rencoded","_Sencoded","Sencoded","toBytes","toUpperCase","events","opts","EventEmitter","cache","head","tail","maxAge","clear","remove","element","_unlink","peek","_checkAge","modified","Date","now","evict","emit","_events","_maxListeners","isFunction","isObject","isUndefined","defaultMaxListeners","setMaxListeners","isNaN","TypeError","er","handler","args","listeners","err","context","apply","addListener","listener","newListener","warned","trace","on","once","fired","removeListener","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter"],"mappings":"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CA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,kEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,sEAIA3D,IAAA,CACApL,IAAA,EACA+O,OAAA,CACA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,iEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,kEACA,oEAEA,CACA,mEACA,mEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEACA,oEAEA,CACA,mEAC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","file":"index-browser.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","const Keystore = require('./src/keystore')\nmodule.exports = Keystore()\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict'\nconst IdentityProvider = require('./src/identities')\n\nmodule.exports = IdentityProvider\n","'use strict'\nconst Identity = require('./identity')\nconst OrbitDBIdentityProvider = require('./orbit-db-identity-provider')\nconst Keystore = require('orbit-db-keystore')\nconst type = 'orbitdb'\nconst signingKeysPath = './orbitdb/identity/keys'\nlet supportedTypes = {\n  'orbitdb': OrbitDBIdentityProvider\n}\n\nconst getHandlerFor = (type) => {\n  if (!Identities.isSupported(type)) {\n    throw new Error(`IdentityProvider type '${type}' is not supported`)\n  }\n  return supportedTypes[type]\n}\n\nclass Identities {\n  constructor (options = {}) {\n    this._keystore = options.keystore || Keystore.create(options.signingKeysPath || signingKeysPath)\n  }\n\n  async sign (identity, data) {\n    const signingKey = await this._keystore.getKey(identity.id)\n    if (!signingKey) {\n      throw new Error(`Private signing key not found from Keystore`)\n    }\n\n    return this._keystore.sign(signingKey, data)\n  }\n\n  async verify (signature, publicKey, data) {\n    return this._keystore.verify(signature, publicKey, data)\n  }\n\n  async createIdentity (options = {}) {\n    const IdentityProvider = getHandlerFor(options.type)\n    const identityProvider = new IdentityProvider(options)\n    const id = await identityProvider.getId(options)\n    const { publicKey, idSignature } = await this.signId(id)\n    const pubKeyIdSignature = await identityProvider.signIdentity(publicKey + idSignature, options)\n    return new Identity(id, publicKey, idSignature, pubKeyIdSignature, IdentityProvider.type, this)\n  }\n\n  async signId (id) {\n    const keystore = this._keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    const publicKey = await key.getPublic('hex')\n    const idSignature = await keystore.sign(key, id)\n    return { publicKey, idSignature }\n  }\n\n  async verifyIdentity (identity) {\n    const verified = await this._keystore.verify(\n      identity.signatures.id,\n      identity.publicKey,\n      identity.id\n    )\n    return verified && Identities.verifyIdentity(identity)\n  }\n\n  static async verifyIdentity (identity) {\n    const IdentityProvider = getHandlerFor(identity.type)\n    return IdentityProvider.verifyIdentity(identity)\n  }\n\n  static async createIdentity (options = {}) {\n    options = Object.assign({}, { type }, options)\n    const identities = new Identities(options)\n    return identities.createIdentity(options)\n  }\n\n  static isSupported (type) {\n    return Object.keys(supportedTypes).includes(type)\n  }\n\n  static addIdentityProvider (IdentityProvider) {\n    if (!IdentityProvider) {\n      throw new Error('IdentityProvider class needs to be given as an option')\n    }\n\n    if (!IdentityProvider.type ||\n      typeof IdentityProvider.type !== 'string') {\n      throw new Error('Given IdentityProvider class needs to implement: static get type() { /* return a string */}.')\n    }\n\n    supportedTypes[IdentityProvider.type] = IdentityProvider\n  }\n\n  static removeIdentityProvider (type) {\n    delete supportedTypes[type]\n  }\n}\n\nmodule.exports = Identities\n","'use strict'\nconst isDefined = require('./is-defined')\n\nclass Identity {\n  constructor (id, publicKey, idSignature, pubKeyIdSignature, type, provider) {\n    if (!isDefined(id)) {\n      throw new Error('Identity id is required')\n    }\n\n    if (!isDefined(publicKey)) {\n      throw new Error('Invalid public key')\n    }\n\n    if (!isDefined(idSignature)) {\n      throw new Error('Signature of the id (idSignature) is required')\n    }\n\n    if (!isDefined(pubKeyIdSignature)) {\n      throw new Error('Signature of (publicKey + idSignature) is required')\n    }\n\n    if (!isDefined(type)) {\n      throw new Error('Identity type is required')\n    }\n\n    if (!isDefined(provider)) {\n      throw new Error('Identity provider is required')\n    }\n\n    this._id = id\n    this._publicKey = publicKey\n    this._signatures = Object.assign({}, { id: idSignature }, { publicKey: pubKeyIdSignature })\n    this._type = type\n    this._provider = provider\n  }\n\n  /**\n  * This is only used as a fallback to the clock id when necessary\n  * @return {string} public key hex encoded\n  */\n  get id () {\n    return this._id\n  }\n\n  get publicKey () {\n    return this._publicKey\n  }\n\n  get signatures () {\n    return this._signatures\n  }\n\n  get type () {\n    return this._type\n  }\n\n  get provider () {\n    return this._provider\n  }\n\n  toJSON () {\n    return {\n      id: this._id,\n      publicKey: this._publicKey,\n      signatures: this._signatures,\n      type: this._type\n    }\n  }\n}\n\nmodule.exports = Identity\n","'use strict'\nconst isDefined = (arg) => arg !== undefined && arg !== null\n\nmodule.exports = isDefined\n","'use strict'\nconst IdentityProvider = require('./identity-provider-interface')\nconst Keystore = require('orbit-db-keystore')\nconst identityKeysPath = './orbitdb/identity/keys'\nconst type = 'orbitdb'\n\nclass OrbitDBIdentityProvider extends IdentityProvider {\n  constructor (options = {}) {\n    super()\n    this._keystore = Keystore.create(options.identityKeysPath || identityKeysPath)\n  }\n\n  // Returns the type of the identity provider\n  static get type () { return type }\n\n  async getId (options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n\n    const keystore = this._keystore\n    const key = await keystore.getKey(id) || await keystore.createKey(id)\n    return key.getPublic('hex')\n  }\n\n  async signIdentity (data, options = {}) {\n    const id = options.id\n    if (!id) {\n      throw new Error('id is required')\n    }\n    const keystore = this._keystore\n    const key = await keystore.getKey(id)\n    if (!key) {\n      throw new Error(`Signing key for '${id}' not found`)\n    }\n    return keystore.sign(key, data)\n  }\n\n  static async verifyIdentity (identity) {\n    // Verify that identity was signed by the ID\n    return Keystore.verify(\n      identity.signatures.publicKey,\n      identity.id,\n      identity.publicKey + identity.signatures.id\n    )\n  }\n}\n\nmodule.exports = OrbitDBIdentityProvider\n","'use strict'\n\nclass IdentityProvider {\n  /* Return id of identity (to be signed by orbit-db public key) */\n  async getId (options) {}\n\n  /* Return signature of OrbitDB public key signature */\n  async signIdentity (data, options) {}\n\n  /* Verify a signature of OrbitDB public key signature */\n  static async verifyIdentity (identity) {}\n\n  /* Return the type for this identity provider */\n  static get type () {\n    throw new Error(`'static get type ()' needs to be defined in the inheriting class`)\n  }\n\n  /*\n    Return the type for this identity-procider\n    NOTE! This is the only property of the interface that\n    shouldn't be overridden in the inherited IdentityProvider\n  */\n  get type () {\n    return this.constructor.type\n  }\n}\n\nmodule.exports = IdentityProvider\n","'use strict'\n\nconst EC = require('elliptic').ec\nconst ec = new EC('secp256k1')\nconst LRU = require('lru')\n\nclass Keystore {\n  constructor (storage) {\n    this._storage = storage\n    this._cache = new LRU(100)\n  }\n\n  hasKey (id) {\n    if (!id) throw new Error('id needed to check a key')\n    let hasKey = false\n    let storedKey = this._cache.get(id) || this._storage.getItem(id)\n    try {\n      hasKey = storedKey !== undefined && storedKey !== null\n    } catch (e) {\n      // Catches 'Error: ENOENT: no such file or directory, open <path>'\n      console.error('Error: ENOENT: no such file or directory')\n    }\n    return hasKey\n  }\n\n  createKey (id) {\n    if (!id) throw new Error('id needed to create a key')\n\n    const keyPair = ec.genKeyPair()\n\n    const key = {\n      publicKey: keyPair.getPublic('hex'),\n      privateKey: keyPair.getPrivate('hex'),\n    }\n\n    this._storage.setItem(id, JSON.stringify(key))\n    this._cache.set(id, key)\n\n    return keyPair\n  }\n\n  getKey (id) {\n    if (!id) throw new Error('id needed to get a key')\n    const cachedKey = this._cache.get(id)\n    let storedKey\n    try {\n      storedKey = cachedKey || this._storage.getItem(id)\n    } catch (e) {\n      // ignore ENOENT error\n    }\n\n    if (!storedKey)\n      return\n\n    const deserializedKey = cachedKey || JSON.parse(storedKey)\n\n    if (!deserializedKey)\n      return\n\n    if (!cachedKey)\n      this._cache.set(id, deserializedKey)\n\n    const key = ec.keyPair({\n      pub:  deserializedKey.publicKey,\n      priv: deserializedKey.privateKey,\n      pubEnc: 'hex',\n      privEnc: 'hex',\n    })\n\n    return key\n  }\n\n  sign(key, data) {\n    if (!key) throw new Error('No signing key given')\n    if (!data) throw new Error('Given input data was undefined')\n    const sig = ec.sign(data, key)\n    return Promise.resolve(sig.toDER('hex'))\n  }\n\n  verify(signature, publicKey, data) {\n    return Keystore.verify(signature, publicKey, data)\n  }\n\n  static verify(signature, publicKey, data) {\n    if (!signature) throw new Error('No signature given')\n    if (!publicKey) throw new Error('Given publicKey was undefined')\n    if (!data) throw new Error('Given input data was undefined')\n    let res = false\n    const key = ec.keyPair({\n      pub:  publicKey,\n      pubEnc: 'hex',\n    })\n    try {\n      res = ec.verify(data, signature, key)\n    } catch (e) {\n      // Catches 'Error: Signature without r or s'\n    }\n    return Promise.resolve(res)\n  }\n}\n\nmodule.exports = (LocalStorage, mkdir) => {\n  return {\n    create: (directory = './keystore') => {\n      // If we're in Node.js, mkdir module is expected to passed\n      // and we need to make sure the directory exists\n      if (mkdir && mkdir.sync) {\n        mkdir.sync(directory)\n      }\n      // In Node.js, we use the injected LocalStorage module,\n      // in the browser, we use the browser's localStorage\n      const storage = LocalStorage ? new LocalStorage(directory) : localStorage\n      return new Keystore(storage)\n    },\n    verify: Keystore.verify\n  }\n}\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","var events = require('events')\nvar inherits = require('inherits')\n\nmodule.exports = LRU\n\nfunction LRU (opts) {\n  if (!(this instanceof LRU)) return new LRU(opts)\n  if (typeof opts === 'number') opts = {max: opts}\n  if (!opts) opts = {}\n  events.EventEmitter.call(this)\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n  this.max = opts.max || 1000\n  this.maxAge = opts.maxAge || 0\n}\n\ninherits(LRU, events.EventEmitter)\n\nObject.defineProperty(LRU.prototype, 'keys', {\n  get: function () { return Object.keys(this.cache) }\n})\n\nLRU.prototype.clear = function () {\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n}\n\nLRU.prototype.remove = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n  delete this.cache[key]\n  this._unlink(key, element.prev, element.next)\n  return element.value\n}\n\nLRU.prototype._unlink = function (key, prev, next) {\n  this.length--\n\n  if (this.length === 0) {\n    this.head = this.tail = null\n  } else {\n    if (this.head === key) {\n      this.head = prev\n      this.cache[this.head].next = null\n    } else if (this.tail === key) {\n      this.tail = next\n      this.cache[this.tail].prev = null\n    } else {\n      this.cache[prev].next = next\n      this.cache[next].prev = prev\n    }\n  }\n}\n\nLRU.prototype.peek = function (key) {\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n  return element.value\n}\n\nLRU.prototype.set = function (key, value) {\n  if (typeof key !== 'string') key = '' + key\n\n  var element\n\n  if (this.cache.hasOwnProperty(key)) {\n    element = this.cache[key]\n    element.value = value\n    if (this.maxAge) element.modified = Date.now()\n\n    // If it's already the head, there's nothing more to do:\n    if (key === this.head) return value\n    this._unlink(key, element.prev, element.next)\n  } else {\n    element = {value: value, modified: 0, next: null, prev: null}\n    if (this.maxAge) element.modified = Date.now()\n    this.cache[key] = element\n\n    // Eviction is only possible if the key didn't already exist:\n    if (this.length === this.max) this.evict()\n  }\n\n  this.length++\n  element.next = null\n  element.prev = this.head\n\n  if (this.head) this.cache[this.head].next = key\n  this.head = key\n\n  if (!this.tail) this.tail = key\n  return value\n}\n\nLRU.prototype._checkAge = function (key, element) {\n  if (this.maxAge && (Date.now() - element.modified) > this.maxAge) {\n    this.remove(key)\n    this.emit('evict', {key: key, value: element.value})\n    return false\n  }\n  return true\n}\n\nLRU.prototype.get = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n\n  if (this.head !== key) {\n    if (key === this.tail) {\n      this.tail = element.next\n      this.cache[this.tail].prev = null\n    } else {\n      // Set prev.next -> element.next:\n      this.cache[element.prev].next = element.next\n    }\n\n    // Set element.next.prev -> element.prev:\n    this.cache[element.next].prev = element.prev\n\n    // Element is the new head\n    this.cache[this.head].next = key\n    element.prev = this.head\n    element.next = null\n    this.head = key\n  }\n\n  return element.value\n}\n\nLRU.prototype.evict = function () {\n  if (!this.tail) return\n  var key = this.tail\n  var value = this.remove(this.tail)\n  this.emit('evict', {key: key, value: value})\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n"],"sourceRoot":""}